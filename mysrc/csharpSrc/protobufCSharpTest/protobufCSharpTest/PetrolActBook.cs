// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: PetrolActBook.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from PetrolActBook.proto</summary>
public static partial class PetrolActBookReflection {

  #region Descriptor
  /// <summary>File descriptor for PetrolActBook.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static PetrolActBookReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChNQZXRyb2xBY3RCb29rLnByb3RvIkgKG0FjdF9BbmRfUGV0cm9sX1N0YXRp",
          "b25fRGF0YRIOCgZhY3RfaWQYASABKAUSGQoRcGV0cm9sX3N0YXRpb25fbm8Y",
          "AiABKAUiUgoNUGV0cm9sQWN0Qm9vaxJBChthY3RfYW5kX3BldHJvbF9zdGF0",
          "aW9uX2RhdGEYASADKAsyHC5BY3RfQW5kX1BldHJvbF9TdGF0aW9uX0RhdGFi",
          "BnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::Act_And_Petrol_Station_Data), global::Act_And_Petrol_Station_Data.Parser, new[]{ "ActId", "PetrolStationNo" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PetrolActBook), global::PetrolActBook.Parser, new[]{ "ActAndPetrolStationData" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class Act_And_Petrol_Station_Data : pb::IMessage<Act_And_Petrol_Station_Data> {
  private static readonly pb::MessageParser<Act_And_Petrol_Station_Data> _parser = new pb::MessageParser<Act_And_Petrol_Station_Data>(() => new Act_And_Petrol_Station_Data());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Act_And_Petrol_Station_Data> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PetrolActBookReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Act_And_Petrol_Station_Data() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Act_And_Petrol_Station_Data(Act_And_Petrol_Station_Data other) : this() {
    actId_ = other.actId_;
    petrolStationNo_ = other.petrolStationNo_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Act_And_Petrol_Station_Data Clone() {
    return new Act_And_Petrol_Station_Data(this);
  }

  /// <summary>Field number for the "act_id" field.</summary>
  public const int ActIdFieldNumber = 1;
  private int actId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ActId {
    get { return actId_; }
    set {
      actId_ = value;
    }
  }

  /// <summary>Field number for the "petrol_station_no" field.</summary>
  public const int PetrolStationNoFieldNumber = 2;
  private int petrolStationNo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int PetrolStationNo {
    get { return petrolStationNo_; }
    set {
      petrolStationNo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Act_And_Petrol_Station_Data);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Act_And_Petrol_Station_Data other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ActId != other.ActId) return false;
    if (PetrolStationNo != other.PetrolStationNo) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ActId != 0) hash ^= ActId.GetHashCode();
    if (PetrolStationNo != 0) hash ^= PetrolStationNo.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ActId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ActId);
    }
    if (PetrolStationNo != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(PetrolStationNo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ActId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActId);
    }
    if (PetrolStationNo != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PetrolStationNo);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Act_And_Petrol_Station_Data other) {
    if (other == null) {
      return;
    }
    if (other.ActId != 0) {
      ActId = other.ActId;
    }
    if (other.PetrolStationNo != 0) {
      PetrolStationNo = other.PetrolStationNo;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ActId = input.ReadInt32();
          break;
        }
        case 16: {
          PetrolStationNo = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class PetrolActBook : pb::IMessage<PetrolActBook> {
  private static readonly pb::MessageParser<PetrolActBook> _parser = new pb::MessageParser<PetrolActBook>(() => new PetrolActBook());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PetrolActBook> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PetrolActBookReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PetrolActBook() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PetrolActBook(PetrolActBook other) : this() {
    actAndPetrolStationData_ = other.actAndPetrolStationData_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PetrolActBook Clone() {
    return new PetrolActBook(this);
  }

  /// <summary>Field number for the "act_and_petrol_station_data" field.</summary>
  public const int ActAndPetrolStationDataFieldNumber = 1;
  private static readonly pb::FieldCodec<global::Act_And_Petrol_Station_Data> _repeated_actAndPetrolStationData_codec
      = pb::FieldCodec.ForMessage(10, global::Act_And_Petrol_Station_Data.Parser);
  private readonly pbc::RepeatedField<global::Act_And_Petrol_Station_Data> actAndPetrolStationData_ = new pbc::RepeatedField<global::Act_And_Petrol_Station_Data>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Act_And_Petrol_Station_Data> ActAndPetrolStationData {
    get { return actAndPetrolStationData_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PetrolActBook);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PetrolActBook other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!actAndPetrolStationData_.Equals(other.actAndPetrolStationData_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= actAndPetrolStationData_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    actAndPetrolStationData_.WriteTo(output, _repeated_actAndPetrolStationData_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += actAndPetrolStationData_.CalculateSize(_repeated_actAndPetrolStationData_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PetrolActBook other) {
    if (other == null) {
      return;
    }
    actAndPetrolStationData_.Add(other.actAndPetrolStationData_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          actAndPetrolStationData_.AddEntriesFrom(input, _repeated_actAndPetrolStationData_codec);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
